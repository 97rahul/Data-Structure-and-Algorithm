#include <unordered_map>
#include <list>
#include <stack>


void topologicalSort(int node,vector<bool> &visited,stack <int> &s,unordered_map<int,list<int>> &adjList){
    visited[node] =true;
    for(auto j:adjList[node]){
        if(!visited[j]){
            topologicalSort(j,visited,s,adjList);
        }
    }
    s.push(node);
}

vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    unordered_map<int,list<int>> adjList;
    for(int i = 0;i<e;i++){
        int u = edges[i][0];
        int v = edges[i][1];
        
        adjList[u].push_back(v);
    }
    
    vector<bool> visited(v);
    stack <int> s;
    for(int i =0;i<v;i++){
        if(!visited[i]){
            topologicalSort(i,visited,s,adjList);
        }
    }
    
    vector <int> ans;
    while(!s.empty()){
        ans.push_back(s.top());
        s.pop();
    }
    return ans;
}