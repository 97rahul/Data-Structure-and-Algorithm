#include <iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* next;
    
    Node(int data){
        this->data = data;
        this->next = NULL;
    }
    
    ~Node(){
        int value = this->data;
        if(this->next !=NULL){
            delete next;
            next = NULL;
        }
        cout<<"memory is free for node with this data "<<value<<endl;
    }
};


void InsertNode(Node* &tail,int element,int value){
    
    if(tail == NULL){
        Node* newnode = new Node(value);
        tail = newnode;
        newnode->next = newnode;
    }
    else{
        Node* curr = tail;
        while(curr->data !=element)
            curr = curr->next;
        
        Node* temp = new Node(value);
        temp->next = curr->next;
        curr->next = temp;
    }
}

void DeleteNode(Node* &tail,int value){
    
    if(tail == NULL){
        cout<<"List is empty"<<endl;
        return;
    }
    else{
        Node* prev = tail;
        Node* curr = prev->next;
        
        while(curr->data !=value){
            prev = curr;
            curr = curr->next;
        }
        
        prev->next = curr->next;
        
        if(curr == prev)
            tail = NULL;
        
        else if(tail == curr)
            tail = curr->next;
 
        curr->next = NULL;
        delete curr;
    }
    
    
}

void print(Node* &tail){
    Node* temp = tail;
    
    if(tail == NULL){
        cout<<"List is empty"<<endl;
        return;
    }
    
    do{
        cout<<tail->data<<" ";
        tail = tail->next;
    }
    while(tail!=temp);
    cout<<endl;
}


int main() {
   
   Node* tail = NULL;
   
   InsertNode(tail,5,3);
   print(tail);
   
   
   DeleteNode(tail,3);
   print(tail);

    return 0;
}