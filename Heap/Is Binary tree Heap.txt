class Solution {
  public:
  
  
    int countNodes(struct Node* tree){
        if(tree == NULL)
            return 0;
            
        int ans = 1 + countNodes(tree->left) + countNodes(tree->right);
        return ans;
    }  
  
  
    bool isCBT(struct Node* tree,int index,int totalcount){
        if(tree == NULL)
            return true;
            
        if(index>=totalcount)
            return false;
            
        else{
            bool left = isCBT(tree->left,2*index + 1,totalcount);
            bool right = isCBT(tree->right,2*index + 2,totalcount);
            return (left && right);
        }
    }
    
    bool isMaxOrder(struct Node* tree){
        if(tree->left == NULL && tree->right == NULL)
            return true;
        
        if(tree->right == NULL)
            return (tree->data>tree->left->data);
            
        else{
            bool left = isMaxOrder(tree->left);
            bool right = isMaxOrder(tree->right);
            
            if(left && right && tree->data>tree->left->data && tree->data > tree->right->data)
                return true;
            else
                return false;
        }
                
        
    }
  
    bool isHeap(struct Node* tree) {
        
        int index = 0;
        int totalcount = countNodes(tree);
        
        if(isCBT(tree,index,totalcount) && isMaxOrder(tree))
            return true;
        else
            return false;
    }
};