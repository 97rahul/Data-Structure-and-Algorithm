class Queue {
    
    int *arr;
    int size;
    int qfront;
    int rear;
    
public:
    Queue() {
        size = 100001;
        arr = new int[size];
        qfront = 0;
        rear = 0;
    }

    /*----------------- Public Functions of Queue -----------------*/

    bool isEmpty() {
        // Implement the isEmpty() function
        if(qfront == rear)
            return true;
        return false;
    }

    void enqueue(int data) {
        // Implement the enqueue() function
        if(rear >=size)
            cout<<"Queue is full"<<endl;
        arr[rear] = data;
        rear++;
    }

    int dequeue() {
        // Implement the dequeue() function
        if(qfront == rear)
            return -1;
        else{
            int x = arr[qfront];
            arr[qfront] = -1;
            qfront++;
            if(qfront==rear){
                qfront = 0;
                rear = 0;
            }
            return x;
            
        }
        
        
    }

    int front() {
        // Implement the front() function
        if(qfront == rear)
            return -1;
        return arr[qfront];
        
    }
};